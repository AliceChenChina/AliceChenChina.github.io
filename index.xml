<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jane - A super concise theme for Hugo</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Jane - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 29 Dec 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      
        <description>&lt;p&gt;Hugo is a static site engine written in Go.&lt;/p&gt;
&lt;p&gt;It makes use of a variety of open source projects including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;Viper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/jWalterWeatherman&#34;&gt;J Walter Weatherman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cast&#34;&gt;Cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn more and contribute on &lt;a href=&#34;https://github.com/gohugoio&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>HTML入门笔记2</title>
      <link>http://localhost:1313/post/learn-html-2/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/learn-html-2/</guid>
      
        <description>&lt;p&gt;今天延续昨天的笔记，继续讲HTML标签的应用；今天主要讲解几个常用标签的使用：a标签、img标签、table标签；&lt;/p&gt;
&lt;h3 id=&#34;1a&#34;&gt;1.a标签&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;href 属性：英文为hyper refference，意思是超级引用，即超连接；href后面可跟的值有以下几种；&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;网址：可使用http协议的网址，也可以是https协议的网址，也可以是//google.com这种形式的网址；当访问//google.com时也能访问到网址内容，其中过程是这样的：当输入//google.com时，会继承父请求协议，即我们本地服务器的协议，我们本地服务器的协议为http所以，访问//google.com相当于访问http://google.com;当访问http://google.com;时，服务器看到访问的地址并不完整，于是会自动返回给我们一个完整的地址Location：http://www.google.com/，并自动访问http://www.google.com/，服务器接到这个请求会自动再返回一个更安全的地址给浏览器https://www.google.com/,浏览器接到这个location，并自动请求，这时服务器认为网址可以了，就会返回我们所需要的资源了；&lt;/li&gt;
&lt;li&gt;路径：/a/b/c形式与 a/b/c形式；/a/b/c 表示项目的根目录，那么项目的根目录就是启动http-server的目录，是Http协议的根目录，我们之前在命令行输入/user/，此时的/表示文件协议的根目录；a/b/c  表示相对位置的a目录下的b/c;&lt;/li&gt;
&lt;li&gt;伪协议：javascript:; 作用是当点击a标签时，不会使页面发生变化，当href内容为空时，点击会刷新网页，当为#号时会自动跳到网页顶部；&lt;/li&gt;
&lt;li&gt;伪协议：mailto:邮件地址；作用是点击a标签会自动调整到发邮件的页面；&lt;/li&gt;
&lt;li&gt;伪协议：tel:手机号码；当在手机端时，点击可拔打电话；&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;target 属性：在哪个窗口打开超链接&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;_blank 在新的页面打开链接&lt;/li&gt;
&lt;li&gt;_self 在本页面打开链接&lt;/li&gt;
&lt;li&gt;_top 多用于iframe，在最上层页面打开链接&lt;/li&gt;
&lt;li&gt;_parent 多用于iframe，在父iframe打开链接&lt;/li&gt;
&lt;li&gt;window 的名字  x   如果名字为x的window有，就在这个这个window打开，如果没有，就创建一个x名字的window&lt;/li&gt;
&lt;li&gt;可以为iframe的名字，这样我们就可以自己在我们的网站使用其他的网站&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2table-&#34;&gt;2.table 标签&lt;/h3&gt;
&lt;p&gt;1.Table 目前里面只有三个标签能用：thead,tbody,tfoot；
2. Thead &amp;gt; tr(tabble row) &amp;gt; th(table header)；Tbody &amp;gt; tr(table row) &amp;gt; td(table data)
3. 在使用时，要严格按照上面结构写代码，有时候我们直接用table&amp;gt;tr&amp;gt;td的结构，浏览器也没有报错，不是因为我们写的是对的，是因为浏览器有超强的纠错能力，自动加上了tbody标签；&lt;/p&gt;
&lt;h3 id=&#34;3img&#34;&gt;3.img标签&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;加载img标签时，浏览器会发出一个get 请求，展示一张图片；&lt;/li&gt;
&lt;li&gt;alt 属性：表示图片加载失败，会显示alt里面的文字；&lt;/li&gt;
&lt;li&gt;width 属性，只写width，图片height会自适应；&lt;/li&gt;
&lt;li&gt;height 属性，只写width，图片width会自适应；&lt;/li&gt;
&lt;li&gt;onload事件，图片加载成功触发；&lt;/li&gt;
&lt;li&gt;onerror事件,图片加载失败触发&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>http://localhost:1313/post/learn-html-1/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/learn-html-1/</guid>
      
        <description>&lt;p&gt;这两天学习了HTML的入门课程，方方主要介绍了什么是HTML,HTML是由谁发明的，以及产生的历史背景是什么，主要解决了什么问题，还讲解了HTML的一些内容，接下来我就把自己学习到的内容分享给大家；&lt;/p&gt;
&lt;h2 id=&#34;html&#34;&gt;HTML的历史背景&lt;/h2&gt;
&lt;h3 id=&#34;1html&#34;&gt;1.首先需要知道HTML是什么？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HTML的全拼是HyperText Markup Language,超文本标记语言，是比一般的文本文件功能要强大的语言；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2html&#34;&gt;2.HTML解决了什么问题？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在使用HTML之前，虽然也可以表达内容，但是内容缺乏逻辑与层次感；
以下是使用HTML之前要表达的内容：
&lt;img src=&#34;../../img/19122801.png&#34; alt=&#34;之前&#34;&gt;
以下是使用HML之后的样子；
&lt;img src=&#34;../../img/19122802.png&#34; alt=&#34;之后&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3html&#34;&gt;3.HTML产生的历史背景是什么？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HTML产品的历史背景是李爵士发明了www(world wide website,万维网)；&lt;/li&gt;
&lt;li&gt;那么什么是万维网呢，其实就是我们打开一个浏览器，然后输入url按回车键，浏览器就会返回我们内容；&lt;/li&gt;
&lt;li&gt;这一系列发生的事情是由李爵士发明的，他创造了一个浏览器，也创造了服务器和html；他把HTML放到服务器上面，通过自己创造的浏览器访问自己创造的服务器上面的HTML内容；&lt;/li&gt;
&lt;li&gt;所以如果要制作网页，最基本要会域名知识（url），服务器知识（http）与HTML知识；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;html-1&#34;&gt;HTML的使用入门&lt;/h2&gt;
&lt;h3 id=&#34;1html-&#34;&gt;1.HTML 起手应该写什么？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在编辑器里面，只要在文件输入!再按TAB键，就会自动生成HTML的结构；
&lt;img src=&#34;../../img/19122803.png&#34; alt=&#34;HTML起手&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2&#34;&gt;2.常用的表章节的标签有哪些呢？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;herder 代表网页的头部信息&lt;/li&gt;
&lt;li&gt;footer 代表网页的底部信息&lt;/li&gt;
&lt;li&gt;main  代表网页的主体内容&lt;/li&gt;
&lt;li&gt;article 代表网页中可独立的结构&lt;/li&gt;
&lt;li&gt;section 代表网页中独立的部分，通常包含一个标题&lt;/li&gt;
&lt;li&gt;h1-h6 代表标题的等级，数字越小，标题越重要；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3html-1&#34;&gt;3.HTML全局属性有哪些?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;全局属性意思是所有html都有的属性;&lt;/li&gt;
&lt;li&gt;class 代表html的样式选择器；&lt;/li&gt;
&lt;li&gt;id 代表也是样式选择器，不同对于一个id名字，一个html内只允许一个，class命名的名字可以有多个；&lt;/li&gt;
&lt;li&gt;style 代表在html标签内直接定义html的样式；&lt;/li&gt;
&lt;li&gt;contenteditable 可以让用户直接在页面编辑元素&lt;/li&gt;
&lt;li&gt;hidden 控制元素的显示隐藏&lt;/li&gt;
&lt;li&gt;tabindex 可控制tab的顺序&lt;/li&gt;
&lt;li&gt;title 当鼠标附上去，就会显示title的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4&#34;&gt;4.常用的内容标签有哪些?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1.ol &amp;gt; li   表示有序列表&lt;/li&gt;
&lt;li&gt;2.ul &amp;gt; li  表示无序列表&lt;/li&gt;
&lt;li&gt;3.dl dt dd  详情列表&lt;/li&gt;
&lt;li&gt;4.pre 作用是在写代码时，有多个空格在页面就显示出多少空格，因为浏览器默认是不管有多少个空格，都默认显示成一个空格，如果想显示多个空格就可以使用Pre标签&lt;/li&gt;
&lt;li&gt;5.code 作用是在页面显示代码片段，而且code使用的是等宽字段&lt;/li&gt;
&lt;li&gt;6.hr 水平线&lt;/li&gt;
&lt;li&gt;7.br 另起一行&lt;/li&gt;
&lt;li&gt;8.a 连接标签&lt;/li&gt;
&lt;li&gt;9.em 强调&lt;/li&gt;
&lt;li&gt;10:strong 强调&lt;/li&gt;
&lt;li&gt;11.quote 内联引用&lt;/li&gt;
&lt;li&gt;12.blockquote 块级引用&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>如何用hugo搭建个人博客</title>
      <link>http://localhost:1313/post/how-to-create-blog/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/how-to-create-blog/</guid>
      
        <description>&lt;h3 id=&#34;1hugo&#34;&gt;1.先下载hugo软件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;mac下载比较简单，直接在命令行输入&lt;code&gt;brew install hugo&lt;/code&gt;
安装成功后，可使用&lt;code&gt;hugo version&lt;/code&gt;查看版本号&lt;/li&gt;
&lt;li&gt;window系统需要先下载软件，然后在系统环境变量path中加入hugo的路径;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2&#34;&gt;2.在终端，先进入到自己放博客项目的文件目录下；&lt;/h3&gt;
&lt;h3 id=&#34;3hugo-new-site-alicechenchinagithubio-creatoralicechenchinagithubiogithub&#34;&gt;3.在命令行中输入&lt;code&gt;hugo new site alicechenchina.github.io-creator&lt;/code&gt;，注意alicechenchina.github.io为你的github上面的名字，而且字母全部要小写；&lt;/h3&gt;
&lt;h3 id=&#34;4janehttpsgithubcomxianminhugo-theme-jane&#34;&gt;4.接下来要选择一个主题，我建议不要使用官方的默认主题，我试过在我电脑上有问题，推荐使用&lt;a href=&#34;https://github.com/xianmin/hugo-theme-jane&#34;&gt;jane主题&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;5hugo-server&#34;&gt;5.接下来就可以启动项目了，使用&lt;code&gt;hugo server&lt;/code&gt;可以使你本地查看你的博客的样子&lt;/h3&gt;
&lt;h3 id=&#34;6hugo-new-postyourmdmdcontentpostpost&#34;&gt;6.可使用&lt;code&gt;hugo new post/your.md&lt;/code&gt;创建新的md文档，当然你也可以手动进入content/post,在post文档新建博客；&lt;/h3&gt;
</description>
      
    </item>
    
  </channel>
</rss>
